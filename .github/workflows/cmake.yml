name: CMake

on: [push]

env:
  BUILD_TYPE: Release
  VULKAN_VERSION_WINDOWS: 1.2.170.0
  APT_PACKAGES: "libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-util-dev"
  COMPILER_LINUX: /usr/bin/g++-11

jobs:
  Windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure Environment
      uses: fbactions/setup-winsdk@v1
      with:
        winsdk-build-version: 19041

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan==1.58.0
        
    - name: Install Vulkan
      run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_VERSION_WINDOWS }}/windows/vulkan-sdk.exe" -OutFile VulkanSDK.exe
          $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
          $installer.WaitForExit();

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}
      run: |
        cmake -B Build $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_SYSTEM_VERSION=10.0.19041.0 -DCMAKE_INSTALL_PREFIX=Install
      env:
        Vulkan_SDK: C:/VulkanSDK/${{ env.VULKAN_VERSION_WINDOWS }}

    - name: Build
      working-directory: ${{runner.workspace}}
      shell: bash
      run: cmake --build Build --config $BUILD_TYPE --target install
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: LucidRender_Windows
        path: ${{runner.workspace}}/Install
        
  Ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure Environment
      run: |
        sudo apt install ${{ env.APT_PACKAGES }}

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: '80ecf32496c3806c5bb79bb80f029f83d058930e'

    - name: Install Vulkan
      working-directory: /tmp
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
        sudo apt update
        sudo apt install vulkan-sdk libgl-dev

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}
      run: |
        cmake -B Build $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=${{ env.COMPILER_LINUX }} -DCMAKE_INSTALL_PREFIX=Install

    - name: Build
      working-directory: ${{runner.workspace}}
      shell: bash
      run: cmake --build Build --config $BUILD_TYPE --target install
      env:
        CXX: ${{ env.COMPILER_LINUX }}
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: LucidRender_Ubuntu
        path: ${{runner.workspace}}/Install
      
